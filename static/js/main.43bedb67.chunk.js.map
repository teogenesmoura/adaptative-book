{"version":3,"sources":["logo.svg","containers/InitialPageContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","body","height","fontFamily","container","padding","display","flexDirection","justifyContent","title","fontWeight","alignSelf","width","fontSize","description","sidebar","credits","color","selectionContainer","overflow","borderRadius","border","margin","backgroundColor","selectionTitle","button","background","boxShadow","SimpleDialog","props","onClose","open","Dialog","aria-labelledby","DialogTitle","id","Grid","style","item","CircularProgress","InitialPage","classes","useState","checkedBitcoin","checkedCovid","setOpen","bitcoinIsGoingUp","setBitcoinIsGoingUp","a","fetch","json","then","res","d","priceByDates","bpi","yesterdayPrice","Date","setDate","getDate","toISOString","slice","priceSumLastMonth","Object","values","reduce","sum","curr","numOfDaysInLastMonth","keys","length","catch","err","console","log","useEffect","fetchData","sleep","milliseconds","Promise","resolve","setTimeout","Fade","in","timeout","className","xs","onClick","event","window","value","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.43bedb67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from 'react'\nimport { Grid,Dialog, DialogTitle,\n          Fade, FormGroup, FormControlLabel,\n          Checkbox, CircularProgress} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nconst useStyles = makeStyles({\n  body: {\n    height: '100vh',\n    fontFamily: 'EB Garamond, serif',\n  },\n  container: {\n    padding: '1rem',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent:  'center',\n  },\n  title: {\n    fontWeight: 400,\n    alignSelf: 'flex-start',\n    width: '100%',\n    fontSize: '2rem',\n  },\n  description: {\n    alignSelf: 'flex-start',\n    width: '100%',\n    fontSize: '1.2rem',\n  },\n  sidebar: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    padding: '0 1rem 0 0',\n  },\n  credits: {\n    color: '#C6C6C6',\n    alignSelf: 'flex-end',\n  },\n  selectionContainer: {\n    overflow: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    borderRadius: '5px',\n    border: '1px solid #F4F4F4',\n    width: '50%',\n    alignSelf: 'center',\n    height: '20vh',\n    padding: '0 1rem',\n    margin: '1rem 0',\n    backgroundColor: '#FDFDFD',\n  },\n  selectionTitle: {\n    alignSelf: 'center',\n    color: '#A6A6A6',\n  },\n  button: {\n    margin: '2rem 0 0 0',\n    alignSelf: 'center',\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    fontWeight: 600,\n  },\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Gathering Bitcoin's information...</DialogTitle>\n        <Grid container style={{display: 'flex', justifyContent: 'center'}}>\n          <Grid item style={{alignSelf: 'center', padding: '1rem'}}>\n            <center>\n            <h5> Determining Lúcio's fate... </h5>\n            <CircularProgress />\n            </center>\n          </Grid>\n        </Grid>\n    </Dialog>\n  );\n}\n\nexport default function InitialPage() {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    checkedBitcoin: false,\n    checkedCovid: false,\n  });\n  const [open, setOpen] = useState(false);\n  const [bitcoinIsGoingUp, setBitcoinIsGoingUp] = useState({ bitcoinIsGoingUp : false})\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = (value) => {\n    setOpen(false)\n  }\n\n  async function fetchData() {\n    const res = await fetch(\"https://api.coindesk.com/v1/bpi/historical/close.json\")\n    res\n    .json()\n    .then(res => {\n      let priceByDates = res.bpi\n      {/* Next line is pure StackOverflow, oh yeah!*/}\n      let yesterdayDate = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toISOString().slice(0,10)\n      let yesterdayPrice = priceByDates[yesterdayDate]\n      let priceSumLastMonth = Object.values(priceByDates).reduce((sum, curr) => curr + sum)\n      let numOfDaysInLastMonth = Object.keys(priceByDates).length\n      let monthAveragePrice = priceSumLastMonth / numOfDaysInLastMonth\n      yesterdayPrice >= monthAveragePrice ? setBitcoinIsGoingUp({bitcoinIsGoingUp: true}) : setBitcoinIsGoingUp({bitcoinIsGoingUp: false})\n    })\n    .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    fetchData()\n  })\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const checkBitcoinStatus = () => {\n    return \"bitcoin is cool\"\n  }\n\n  const checkCovidStatus = () => {\n    return \"covid is not cool\"\n  }\n  const handleButtonClick = (event) => {\n      setOpen(true)\n      sleep(4000).then(() => {\n        bitcoinIsGoingUp ?\n        window.open('https://teogenesmoura.github.io/adaptative-book-version-1/', \"_blank\") :\n        window.open('https://teogenesmoura.github.io/adaptative-book-version-2/', \"_blank\")\n      })\n  }\n\n  const sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }\n\n  return (\n    <Fade in timeout={3000}>\n      <>\n      <Grid container className={classes.body}>\n        <Grid item xs={2} className={classes.sidebar}></Grid>\n        <Grid item xs={8} className={classes.container}>\n          <h1 className={classes.title}> What is the future of text-based storytelling? </h1>\n          <section className={classes.description}>\n            <p> The <i> Party's radio</i> is a short-story that responds dinamically\n            to social changes in the real world. <br></br>Are you ready to embark in an adventure directly\n            influenced by the world around you? </p>\n          </section>\n          <button className={classes.button} onClick={handleButtonClick}> Start reading! </button>\n        </Grid>\n        <Grid item xs={2} className={classes.sidebar}>\n          <h5 className={classes.credits}><i>by Teógenes Moura</i></h5>\n        </Grid>\n      </Grid>\n      <SimpleDialog open={open} onClose={handleClose} />\n      </>\n    </Fade>\n  )\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport InitialPage from \"./containers/InitialPageContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/adaptative-book\">\n            <InitialPage></InitialPage>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}